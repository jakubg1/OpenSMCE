--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class ConfigConfig
---@overload fun(data, path, isAnonymous):ConfigConfig
local ConfigConfig = class:derive("ConfigConfig")

ConfigConfig.metadata = {
    schemaPath = "config.json"
}

---Constructs an instance of ConfigConfig.
---@param data table Raw data from a file.
---@param path string? Path to the file. Used for error messages and saving data.
---@param isAnonymous boolean? If `true`, this resource is anonymous and its path is invalid for saving data.
function ConfigConfig:new(data, path, isAnonymous)
    local u = _ConfigUtils
    self._path = path
    self._alias = data._alias
    self._isAnonymous = isAnonymous

    self.name = u.parseStringOpt(data.name, path, "name")
    self.windowTitle = u.parseStringOpt(data.windowTitle, path, "windowTitle")
    self.engineVersion = u.parseString(data.engineVersion, path, "engineVersion")
    self.nativeResolution = u.parseVec2(data.nativeResolution, path, "nativeResolution")
    self.tickRate = u.parseIntegerOpt(data.tickRate, path, "tickRate") or 60
    self.canvasRenderingMode = u.parseStringOpt(data.canvasRenderingMode, path, "canvasRenderingMode") or "filtered"

    self.richPresence = {}
    self.richPresence.enabled = u.parseBoolean(data.richPresence.enabled, path, "richPresence.enabled")
    self.richPresence.applicationID = u.parseStringOpt(data.richPresence.applicationID, path, "richPresence.applicationID")
end

---Injects functions to Resource Manager regarding this resource type.
---@param ResourceManager ResourceManager Resource Manager class to inject the functions to.
function ConfigConfig.inject(ResourceManager)
    ---@class ResourceManager
    ResourceManager = ResourceManager

    ---Retrieves a ConfigConfig by given path.
    ---@param reference string The path to the resource.
    ---@return ConfigConfig
    function ResourceManager:getConfigConfig(reference)
        return self:getResourceConfig(reference, "Config")
    end
end

return ConfigConfig