--!!--
-- Auto-generated by DocLang Generator
-- REMOVE THIS COMMENT IF YOU MODIFY THIS FILE
-- in order to protect it from being overwritten!
--!!--

local class = require "com.class"

---@class PathConfig
---@overload fun(data, path, isAnonymous):PathConfig
local PathConfig = class:derive("PathConfig")

PathConfig.metadata = {
    schemaPath = "path.json"
}

---Constructs an instance of PathConfig.
---@param data table Raw data from a file.
---@param path string? Path to the file. Used for error messages and saving data.
---@param isAnonymous boolean? If `true`, this resource is anonymous and its path is invalid for saving data.
---@param base PathConfig? If specified, this resource extends the provided resource. Any missing fields are prepended from the base resource.
function PathConfig:new(data, path, isAnonymous, base)
    local u = _ConfigUtils
    self._path = path
    self._alias = data._alias
    self._isAnonymous = isAnonymous

    base = base or {}

    ---@type {x: number, y: number, scale: number?, hidden: boolean?, warp: boolean?}[]
    self.nodes = {}
    for i = 1, #data.nodes do
        self.nodes[i] = {}
        self.nodes[i].x = u.parseNumber(data, base, path, {"nodes", i, "x"})
        self.nodes[i].y = u.parseNumber(data, base, path, {"nodes", i, "y"})
        self.nodes[i].scale = u.parseNumberOpt(data, base, path, {"nodes", i, "scale"}) or 1
        self.nodes[i].hidden = u.parseBooleanOpt(data, base, path, {"nodes", i, "hidden"}) == true
        self.nodes[i].warp = u.parseBooleanOpt(data, base, path, {"nodes", i, "warp"})
    end
end

---Injects functions to Resource Manager regarding this resource type.
---@param ResourceManager ResourceManager Resource Manager class to inject the functions to.
function PathConfig.inject(ResourceManager)
    ---@class ResourceManager
    ResourceManager = ResourceManager

    ---Retrieves a PathConfig by given path.
    ---@param reference string The path to the resource.
    ---@return PathConfig
    function ResourceManager:getPathConfig(reference)
        return self:getResourceConfig(reference, "Path")
    end
end

return PathConfig