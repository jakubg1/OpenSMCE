- (object) - The root object.
    - emitters (array) - A list of Emitters this particle file defines. In the game code, Emitters are called Particle Spawners.
        - (object) - A single emitter.
            - pos (Vector2) - The initial position of the Emitter, relative to wherever the packet has been spawned.
            - speed (Vector2) - The initial acceleration of the Emitter.
            - acceleration (Vector2) - The acceleration of the Emitter.
            - lifespan* (number) [>=0] - How many seconds the Emitter should exist. If left out, this Emitter will never despawn and the entire Particle Packet will be a persistent packet.
            - spawnCount (integer) [>=1] - How many Particles will this Emitter spawn at start.
            - spawnMax (integer) [>=1] - How many Particles spawned by this Emitter can be on the screen at once.
            - spawnDelay* (number) [>=0] - Time between the consecutive particle spawns, in seconds. If not specified, this Emitter will never spawn any particles after its initial burst.
            - particleData (object) - Data applied to every single particle spawned by this Emitter.
                - speedMode (string) - Defines how the speed calculations are performed on this Particle.
                    - "loose" - The particles move freely, like normal particles, not bound to anything.
                    - "radius" - Almost same as above, except the initial speed is multiplied by the particle offset relative to the emitter, at least `-spawnScale` and at most `spawnScale`.
                    - "circle" - The particles are moving along a circle. The `speed` and `acceleration` fields become numbers.
                - spawnScale (Vector2) - The particle will be spawned at a random angle on an ellipse of these perihellium and aphellium.
                - speed (Vector2|number) - The initial speed of the particle, in pixels per second. If `speedMode` is set to `"circle"`, this is a number and the unit is radians per second.
                - acceleration (Vector2|number) - The acceleration rate of the particle, in pixels per second. If `speedMode` is set to `"circle"`, this is a number and the unit is radians per second.
                - lifespan* (number) [>0] - How many seconds the particle should exist. If left out, it will persist indefinitely.
                - sprite (Sprite) - Path to the Sprite which should represent this Particle.
                - animationFrameCount (integer) [>=1] - How many frames are in the animation.
                - animationSpeed (number) - Speed of the animation, in frames per second.
                - animationLoop (boolean) - If set, the animation will loop. Otherwise, it will stop on the last frame.
                - animationFrameRandom (boolean) - If set, the initial animation frame will be picked at random from all possible frames. Otherwise, it will always start from the first frame.
                - fadeInPoint (number) [>=0,<=1] - Percentage of the particle's lifespan, until which the particle's alpha will be linearly interpolated from 0 to 1. Set to 0 if you want it to be fully visible right from the beginning.
                - fadeOutPoint (number) [>=0,<=1] - Percentage of the particle's lifespan, from which the particle's alpha will be linearly decreasing from 1 to 0. Set to 1 if you want it to be fully visible until the very end.
                - posRelative (boolean) - If set, the particle will move along with its spawner.
                - colorPalette* (ColorPalette) - Path to the Color Palette, if the particle will be tinted.
                - colorPaletteSpeed* (number) - The speed of the Color Palette animation, in pixels per second.
                - directionDeviationTime* (number) [>=0] - The delay before directional deviation kicks in.
                - directionDeviationSpeed* (Vector2) - The speed of directional deviation, in radians per second. This will rotate the particle's speed vector.