- (object) - The root object.
    - movement (object) {type: Particle movement type.} - Defines how the speed calculations are performed on this Particle.
        - "loose" - The particles move freely, like normal particles, not bound to anything.
            - speed ($Vector2) - The initial speed of the particle, in pixels per second.
            - acceleration (Vector2) - The acceleration rate of the particle, in pixels per second.
        - "radius" - Almost same as above, except the initial speed is multiplied by the particle offset relative to the emitter, at least `-spawnScale` and at most `spawnScale`.
            - speed ($Vector2) - The initial speed of the particle, in pixels per second.
            - acceleration (Vector2) - The acceleration rate of the particle, in pixels per second.
        - "circle" - The particles are moving along a circle. The `speed` and `acceleration` fields become numbers.
            - speed ($number) - The initial speed of the particle, in radians per second.
            - acceleration (number) - The acceleration rate of the particle, in radians per second.
    - spawnScale ($Vector2) - The particle will be spawned at a random angle on an ellipse of these perihellium and aphellium.
    - lifespan* ($number) [>0] - How many seconds the particle should exist. If left out, it will persist indefinitely.
    - sprite (Sprite) - Path to the Sprite which should represent this Particle.
    - animationFrameCount (integer) [>=1] - How many frames are in the animation.
    - animationSpeed (number) - Speed of the animation, in frames per second.
    - animationLoop (boolean) - If set, the animation will loop. Otherwise, it will stop on the last frame.
    - animationFrameRandom (boolean) - If set, the initial animation frame will be picked at random from all possible frames. Otherwise, it will always start from the first frame.
    - fadeInPoint (number) [>=0,<=1] - Percentage of the particle's lifespan, until which the particle's alpha will be linearly interpolated from 0 to 1. Set to 0 if you want it to be fully visible right from the beginning.
    - fadeOutPoint (number) [>=0,<=1] - Percentage of the particle's lifespan, from which the particle's alpha will be linearly decreasing from 1 to 0. Set to 1 if you want it to be fully visible until the very end.
    - posRelative* = false (boolean) - If set, the particle will move along with its spawner.
    - colorPalette* (ColorPalette) - Path to the Color Palette, if the particle will be tinted.
    - colorPaletteSpeed* (number) - The speed of the Color Palette animation, in pixels per second.
    - directionDeviationTime* (number) [>=0] - The delay before directional deviation kicks in.
    - directionDeviationSpeed* ($Vector2) - The speed of directional deviation, in radians per second. This will rotate the particle's speed vector.