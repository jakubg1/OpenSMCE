- (object) - The root object.
    - map (string) - The map name. Specifically, the name of the folder in the `maps` folder of the game.
    - sequence (LevelSequence) - The level sequence which will be obeyed for this level.
    - music (Music) - Which soundtrack should be played throughout the level.
    - dangerMusic* (Music) - Which soundtrack should be played during the danger phase.
    - ambientMusic* (Music) - Which soundtrack should be played throughout the entire level, including before starting and after winning, independently of the level and danger soundtracks.
    - dangerSound* (SoundEvent) - A sound event which plays whenever the warning effect is spawned.
    - dangerLoopSound* (SoundEvent) - A looping sound event which plays during the danger phase.
    - warmupLoopSound* (SoundEvent) - A looping sound event which plays at the beginning of the level, while the spheres are rolling.
    - failSound* (SoundEvent) - A sound event which plays when the player loses the level.
    - failLoopSound* (SoundEvent) - A looping sound event which plays while the spheres are rolling into the exit node.
    - colorGeneratorNormal (ColorGenerator) - The Color Generator used to generate colors for the shooter throughout this level.
    - colorGeneratorDanger (ColorGenerator) - The Color Generator used to generate colors for the shooter when in danger.
    - shooter* (object) - Defines the Shooter. If not present, the shooter named `default` will be used along with its default movement.
        - name (Shooter) - Which Shooter will be used for this level.
        - movement* (ShooterMovement) - If defined, overrides the default movement of this Shooter.
    - matchEffect (SphereEffect) - The Sphere Effect to be used during normal matches for this level. Whenever a match is made, spheres are inflicted with this effect.
    - objectives (array) - A list of objectives. All of them must be fulfilled in order to complete the level.
        - (object) - A single objective.
            - type (string) - The objective type.
                - "destroyedSpheres" - The target describes how many spheres have to be removed from the board.
                - "timeElapsed" - The target describes how many seconds the level has to be survived for.
                - "score" - The target describes how much score in that level needs to be gained.
            - target (number) [>0] - How many spheres destroyed, time survived or score gained is needed in order to fulfill this objective.
    - pathsBehavior (array) - Defines the behavior of paths. The n-th entry of this list corresponds to the n-th path. If this list is shorter than the number of paths, this list will wrap around during the behavior assignment process. If this list is longer than the number of paths, all subsequent entries are discarded.
        - (object) - A single path behavior.
            - trainRules (LevelTrainRules) - How trains should be spawned, including their length and color distribution.
            - spawnDistance (number) [>=0,<=1] - How far the path must be clear for a new Sphere Chain to spawn.
            - dangerDistance (number) [>=0,<=1] - How far into the path the spheres have to be in order for the player to be in danger.
            - speeds (array) - A list of speeds which will translate to the actual speed on any point of the path.
                - (object) - A single speed graph node.
                    - distance* (number) - How far into the path as a percentage of the path the given speed should be applied. Either this, `offset` or `offsetFromEnd` must exist.
                    - offset* (number) - How far into the path in pixels from its start the given speed should be applied. Either this, `distance` or `offsetFromEnd` must exist.
                    - offsetFromEnd* (number) - How far into the path in pixels from its end the given speed should be applied. Either this, `offset` or `distance` must exist.
                    - speed (number) [>=0] - The desired speed of the sphere trains, in pixels per second.
                    - transition* (object) {type: The type of the level speed transition.} - Defines the transition between this and the next node on the speed graph. By default, linear transition is applied.
                        - "instant" - Instant speed transition. This node's speed will apply all the way to the next speed node.
                        - "linear" - Linear speed transition. This is the default transition type.
                        - "bezier" - The values will be interpolated via a one-dimensional Bezier curve: http://www.demofox.org/bezcubic1d.html on a normalized time value of 0 to 1.
                            - point1 (number) - The first control point value.
                            - point2 (number) - The second control point value.