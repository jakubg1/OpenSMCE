- (object) - The root entry.
    - levelSequence (array) - Defines a Level Sequence. This is a list of states every level can have and will be performed in order, unless specified otherwise.
        - ($level_sequence_entry) - A single sequence step.
    - ui (object) - Defines parameters which are constant throughout the entire UI.
        - buttonClickSound (SoundEvent) - The sound event that will be played whenever a button is clicked.
        - buttonHoverSound (SoundEvent) - The sound event that will be played whenever a mouse is hovering over a button.
        - levelAdvanceSound (SoundEvent) - The sound event that will be played whenever the player advances a level (on the level map).
    - sphereBehavior (object) - Defines behavior of the spheres.
        - acceleration (number) - The default acceleration rate of spheres being pushed.
        - foulAcceleration* (number) - The acceleration rate of spheres used only when the player fails to complete a level.
        - attractionAcceleration* (number) - The acceleration rate of spheres magnetizing to each other.
        - attractionForwardDecceleration* (number) - The decceleration rate of spheres when magnetizing to the group behind while still moving forward.
        - attractionForwardDeccelerationScarab* (number) - The decceleration rate of spheres when magnetizing to a scarab behind while still moving forward.
        - decceleration (number) - The default decceleration rate of spheres.
        - backwardsDecceleration* (number) - The decceleration rate of spheres when they're moving backwards.
        - attractionSpeedBase (number) - Maximum attraction speed of groups of like color being attracted together.\nThis and `attractionSpeedMult` form a final value together using this expression: `attractionSpeedBase + max(1, chain) * attractionSpeedMult`.
        - attractionSpeedMult (number) - The second value used in the formula. For description look at `attractionSpeedBase`.
        - knockbackSpeedBase (number) - Speed induced when a group of spheres crashes into another sphere group behind it.\nThis and `knockbackSpeedMult` form a final value together using this expression: `knockbackSpeedBase + max(1, chain) * knockbackSpeedMult`.
        - knockbackSpeedMult (number) - The second value used in the formula. For description look at `knockbackSpeedBase`.
        - knockbackTime* (number) - If set, this will be the duration the knockback speed will persist for, in seconds.
        - knockbackStopAfterTime* (boolean) - Only if `knockbackTime` is set. If `true`, the speed of the group will be set to 0 once the knockback time is over. Else, the sphere group will deccelerate normally.
        - foulSpeed (number) - Maximum speed of spheres when the player fails to complete a level.
        - overspeedCheck (boolean) - If `true`, spheres will never move faster than the maximum speed defined at a given point of the path.
        - invincibleScarabs (boolean) - If `true`, scarabs cannot be crushed by spheres behind them. Instead, they are pushed.
        - luxorized* (boolean) - Enables sphere physics gimmicks specific to the original Luxor game to mimic it better.
        - joinSound (SoundEvent) - A sound event to be played when two groups of spheres hit each other.
        - newGroupSound (SoundEvent) - A sound event to be played when a new sphere chain appears on the board.
        - noScarabs (boolean) - If `true`, the scarabs will not appear in the game.
        - permitLongMatches (boolean) - If `true`, the spheres will try to make the biggest clump possible before matching together.
    - net* (object) - Defines the Net.
        - particle (Particle) - A persistent particle packet which is spawned when the Net is spawned, and destroyed when the Net expires.
        - sound (SoundEvent) - A looping sound event that will be played when the Net is currently active.
        - posY (integer) - The Y position of the Net.
    - lightningStorm* (object) - Defines the Lightning Storm.
        - delay (%number) [>0] - The delay between strikes. Can be formed as an Expression, which will be evaluated after each strike.
        - particle (Particle) - A one-time particle effect which will be spawned on the sphere that's been destroyed.
        - sound (SoundEvent) - A sound event to be played when a sphere is destroyed.
        - scoreEvent (ScoreEvent) - A Score Event executed on the sphere that's been destroyed.